|Block1
tx_clk <= altpll0:inst1.c1
inclk => altpll0:inst1.inclk0
TX_COM1 <= uart_controller:inst3.uart_tx_com1
dp_inout <> altiobuf0:inst15.dataio[0]
dm_inout <> altiobuf0:inst14.dataio[0]
RX_COM1 => uart_controller:inst3.uart_rx_com1
RX_COM2 => uart_controller:inst3.uart_rx_com2
TX_COM2 <= uart_controller:inst3.uart_tx_com2
d_out_enable <= dp_inout.DB_MAX_OUTPUT_PORT_TYPE
TX_COM_LED1 <= inst5.DB_MAX_OUTPUT_PORT_TYPE
TX_COM_LED2 <= inst4.DB_MAX_OUTPUT_PORT_TYPE


|Block1|altpll0:inst1
areset => areset.IN1
inclk0 => sub_wire4[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|Block1|altpll0:inst1|altpll:altpll_component
inclk[0] => altpll_ocf2:auto_generated.inclk[0]
inclk[1] => altpll_ocf2:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => altpll_ocf2:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Block1|altpll0:inst1|altpll:altpll_component|altpll_ocf2:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|Block1|uart_controller:inst3
uart_clk => rx_data_ready_counter[0].CLK
uart_clk => rx_data_ready_counter[1].CLK
uart_clk => rx_data_ready_counter[2].CLK
uart_clk => rx_data_ready_counter[3].CLK
uart_clk => uart_rx_byte[0]~reg0.CLK
uart_clk => uart_rx_byte[1]~reg0.CLK
uart_clk => uart_rx_byte[2]~reg0.CLK
uart_clk => uart_rx_byte[3]~reg0.CLK
uart_clk => uart_rx_byte[4]~reg0.CLK
uart_clk => uart_rx_byte[5]~reg0.CLK
uart_clk => uart_rx_byte[6]~reg0.CLK
uart_clk => uart_rx_byte[7]~reg0.CLK
uart_clk => uart_rx_done~reg0.CLK
uart_clk => RX_shift[0].CLK
uart_clk => RX_shift[1].CLK
uart_clk => RX_shift[2].CLK
uart_clk => RX_shift[3].CLK
uart_clk => RX_shift[4].CLK
uart_clk => RX_shift[5].CLK
uart_clk => RX_shift[6].CLK
uart_clk => RX_shift[7].CLK
uart_clk => RX_shift[8].CLK
uart_clk => RX_shift[9].CLK
uart_clk => uart_tx.CLK
uart_clk => TX_shift[0].CLK
uart_clk => TX_shift[1].CLK
uart_clk => TX_shift[2].CLK
uart_clk => TX_shift[3].CLK
uart_clk => TX_shift[4].CLK
uart_clk => TX_shift[5].CLK
uart_clk => TX_shift[6].CLK
uart_clk => TX_shift[7].CLK
uart_clk => TX_shift[8].CLK
uart_clk => tx_QUEUE_uart_pointer[0].CLK
uart_clk => tx_QUEUE_uart_pointer[1].CLK
uart_clk => tx_QUEUE_uart_pointer[2].CLK
uart_clk => tx_QUEUE_uart_pointer[3].CLK
uart_clk => tx_QUEUE_uart_pointer[4].CLK
uart_clk => tx_data_ready_counter[0].CLK
uart_clk => tx_data_ready_counter[1].CLK
uart_clk => tx_data_ready_counter[2].CLK
uart_clk => tx_data_ready_counter[3].CLK
uart_clk => tx_data_ready.CLK
rbyteready => tx_QUEUE_core_last_val[0].CLK
rbyteready => tx_QUEUE_core_last_val[1].CLK
rbyteready => tx_QUEUE_core_last_val[2].CLK
rbyteready => tx_QUEUE_core_last_val[3].CLK
rbyteready => tx_QUEUE_core_last_val[4].CLK
rbyteready => tx_QUEUE_core_pointer[0].CLK
rbyteready => tx_QUEUE_core_pointer[1].CLK
rbyteready => tx_QUEUE_core_pointer[2].CLK
rbyteready => tx_QUEUE_core_pointer[3].CLK
rbyteready => tx_QUEUE_core_pointer[4].CLK
rbyteready => is_command_counter[0].CLK
rbyteready => is_command_counter[1].CLK
rbyteready => is_command.CLK
EOP => ~NO_FANOUT~
uart_tx_byte[0] => Equal0.IN20
uart_tx_byte[0] => Equal1.IN20
uart_tx_byte[0] => Equal2.IN20
uart_tx_byte[0] => Equal3.IN20
uart_tx_byte[0] => Equal4.IN20
uart_tx_byte[0] => tx_byte_QUEUE.data_a[0].DATAIN
uart_tx_byte[0] => com_port_number[0].DATAIN
uart_tx_byte[0] => tx_byte_QUEUE.DATAIN
uart_tx_byte[1] => Equal0.IN19
uart_tx_byte[1] => Equal1.IN19
uart_tx_byte[1] => Equal2.IN19
uart_tx_byte[1] => Equal3.IN19
uart_tx_byte[1] => Equal4.IN19
uart_tx_byte[1] => tx_byte_QUEUE.data_a[1].DATAIN
uart_tx_byte[1] => com_port_number[1].DATAIN
uart_tx_byte[1] => tx_byte_QUEUE.DATAIN1
uart_tx_byte[2] => Equal0.IN18
uart_tx_byte[2] => Equal1.IN18
uart_tx_byte[2] => Equal2.IN18
uart_tx_byte[2] => Equal3.IN18
uart_tx_byte[2] => Equal4.IN18
uart_tx_byte[2] => tx_byte_QUEUE.data_a[2].DATAIN
uart_tx_byte[2] => com_port_number[2].DATAIN
uart_tx_byte[2] => tx_byte_QUEUE.DATAIN2
uart_tx_byte[3] => Equal0.IN17
uart_tx_byte[3] => Equal1.IN17
uart_tx_byte[3] => Equal2.IN17
uart_tx_byte[3] => Equal3.IN17
uart_tx_byte[3] => Equal4.IN17
uart_tx_byte[3] => tx_byte_QUEUE.data_a[3].DATAIN
uart_tx_byte[3] => com_port_number[3].DATAIN
uart_tx_byte[3] => tx_byte_QUEUE.DATAIN3
uart_tx_byte[4] => Equal0.IN16
uart_tx_byte[4] => Equal1.IN16
uart_tx_byte[4] => Equal2.IN16
uart_tx_byte[4] => Equal3.IN16
uart_tx_byte[4] => Equal4.IN16
uart_tx_byte[4] => tx_byte_QUEUE.data_a[4].DATAIN
uart_tx_byte[4] => com_port_number[4].DATAIN
uart_tx_byte[4] => tx_byte_QUEUE.DATAIN4
uart_tx_byte[5] => Equal0.IN15
uart_tx_byte[5] => Equal1.IN15
uart_tx_byte[5] => Equal2.IN15
uart_tx_byte[5] => Equal3.IN15
uart_tx_byte[5] => Equal4.IN15
uart_tx_byte[5] => tx_byte_QUEUE.data_a[5].DATAIN
uart_tx_byte[5] => com_port_number[5].DATAIN
uart_tx_byte[5] => tx_byte_QUEUE.DATAIN5
uart_tx_byte[6] => Equal0.IN14
uart_tx_byte[6] => Equal1.IN14
uart_tx_byte[6] => Equal2.IN14
uart_tx_byte[6] => Equal3.IN14
uart_tx_byte[6] => Equal4.IN14
uart_tx_byte[6] => tx_byte_QUEUE.data_a[6].DATAIN
uart_tx_byte[6] => com_port_number[6].DATAIN
uart_tx_byte[6] => tx_byte_QUEUE.DATAIN6
uart_tx_byte[7] => Equal0.IN13
uart_tx_byte[7] => Equal1.IN13
uart_tx_byte[7] => Equal2.IN13
uart_tx_byte[7] => Equal3.IN13
uart_tx_byte[7] => Equal4.IN13
uart_tx_byte[7] => tx_byte_QUEUE.data_a[7].DATAIN
uart_tx_byte[7] => com_port_number[7].DATAIN
uart_tx_byte[7] => tx_byte_QUEUE.DATAIN7
uart_rx_byte[0] <= uart_rx_byte[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[1] <= uart_rx_byte[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[2] <= uart_rx_byte[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[3] <= uart_rx_byte[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[4] <= uart_rx_byte[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[5] <= uart_rx_byte[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[6] <= uart_rx_byte[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_byte[7] <= uart_rx_byte[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_com1 <= uart_tx_com1.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_com1 => uart_rx.DATAA
uart_rx_com1 => uart_rx.DATAB
uart_tx_en => tx_byte_QUEUE.raddr_a[4].OUTPUTSELECT
uart_tx_en => tx_byte_QUEUE.raddr_a[3].OUTPUTSELECT
uart_tx_en => tx_byte_QUEUE.raddr_a[2].OUTPUTSELECT
uart_tx_en => tx_byte_QUEUE.raddr_a[1].OUTPUTSELECT
uart_tx_en => tx_byte_QUEUE.raddr_a[0].OUTPUTSELECT
uart_tx_en => tx_data_ready.OUTPUTSELECT
uart_tx_en => tx_data_ready_counter.OUTPUTSELECT
uart_tx_en => tx_data_ready_counter.OUTPUTSELECT
uart_tx_en => tx_data_ready_counter.OUTPUTSELECT
uart_tx_en => tx_data_ready_counter.OUTPUTSELECT
uart_tx_en => tx_QUEUE_uart_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_uart_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_uart_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_uart_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_uart_pointer.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => TX_shift.OUTPUTSELECT
uart_tx_en => uart_tx.OUTPUTSELECT
uart_tx_en => tx_byte_QUEUE.we_a.DATAIN
uart_tx_en => tx_QUEUE_core_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_core_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_core_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_core_pointer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_core_pointer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => TX_buffer.OUTPUTSELECT
uart_tx_en => tx_QUEUE_core_last_val[0].ENA
uart_tx_en => tx_QUEUE_core_last_val[1].ENA
uart_tx_en => tx_QUEUE_core_last_val[2].ENA
uart_tx_en => tx_QUEUE_core_last_val[3].ENA
uart_tx_en => tx_QUEUE_core_last_val[4].ENA
uart_tx_en => tx_byte_QUEUE.WE
usb_clk => tx_byte_QUEUE.we_a.CLK
usb_clk => tx_byte_QUEUE.waddr_a[4].CLK
usb_clk => tx_byte_QUEUE.waddr_a[3].CLK
usb_clk => tx_byte_QUEUE.waddr_a[2].CLK
usb_clk => tx_byte_QUEUE.waddr_a[1].CLK
usb_clk => tx_byte_QUEUE.waddr_a[0].CLK
usb_clk => tx_byte_QUEUE.data_a[7].CLK
usb_clk => tx_byte_QUEUE.data_a[6].CLK
usb_clk => tx_byte_QUEUE.data_a[5].CLK
usb_clk => tx_byte_QUEUE.data_a[4].CLK
usb_clk => tx_byte_QUEUE.data_a[3].CLK
usb_clk => tx_byte_QUEUE.data_a[2].CLK
usb_clk => tx_byte_QUEUE.data_a[1].CLK
usb_clk => tx_byte_QUEUE.data_a[0].CLK
usb_clk => TX_buffer[0].CLK
usb_clk => TX_buffer[1].CLK
usb_clk => TX_buffer[2].CLK
usb_clk => TX_buffer[3].CLK
usb_clk => TX_buffer[4].CLK
usb_clk => TX_buffer[5].CLK
usb_clk => TX_buffer[6].CLK
usb_clk => TX_buffer[7].CLK
usb_clk => tx_byte_QUEUE.CLK0
uart_tx_com2 <= uart_tx_com2.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_done <= uart_rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
uart_rx_com2 => uart_rx.DATAB


|Block1|ls_usb_recv:inst
clk => clk_counter[0].CLK
clk => clk_counter[1].CLK
clk => clk_counter[2].CLK
clk => clk_counter[3].CLK
clk => clk_counter[4].CLK
clk => clk_counter[5].CLK
clk => clk_counter[6].CLK
clk => EOP_counter[0].CLK
clk => EOP_counter[1].CLK
clk => EOP_counter[2].CLK
clk => EOP~reg0.CLK
clk => dm_input.CLK
clk => dp_input.CLK
dp => dpbuf.DATAIN
dm => dmbuf.DATAIN
d_out_enable => dm_input.PRESET
d_out_enable => dp_input.ACLR
alternate_strobe => ~NO_FANOUT~
EOP <= EOP~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[0] <= rdata[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[1] <= rdata[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[2] <= rdata[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[3] <= rdata[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[4] <= rdata[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[5] <= rdata[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[6] <= rdata[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[7] <= rdata[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata_ready <= rdata_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
strobe <= clk_counter[6].DB_MAX_OUTPUT_PORT_TYPE
SOP <= SOP~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Block1|altiobuf0:inst15
datain[0] => datain[0].IN1
oe[0] => oe[0].IN1
dataio[0] <> altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component.dataio
dataout[0] <= altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component.dataout


|Block1|altiobuf0:inst15|altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component
datain[0] => obufa_0.IN
dataio[0] <> dataio[0]
dataout[0] <= ibufa_0.OUT
oe[0] => obufa_0.OE


|Block1|ls_usb_sender:inst7
clk => clk_counter[0].CLK
clk => clk_counter[1].CLK
clk => clk_counter[2].CLK
clk => clk_counter[3].CLK
clk => clk_counter[4].CLK
clk => clk_counter[5].CLK
clk => clk_counter[6].CLK
EOP => dp_out.OUTPUTSELECT
EOP => dm_out.OUTPUTSELECT
EOP => NRZI_coding.OUTPUTSELECT
core_strobe => serial_shift.CLK
core_strobe => do_bitstaff.CLK
core_strobe => out[0].CLK
core_strobe => out[1].CLK
core_strobe => out[2].CLK
core_strobe => out[3].CLK
core_strobe => out[4].CLK
core_strobe => out[5].CLK
core_strobe => out[6].CLK
core_strobe => out[7].CLK
core_strobe => NRZI_coding.CLK
core_strobe => dm_out~reg0.CLK
core_strobe => dp_out~reg0.CLK
core_strobe => sEOP_delay[0].CLK
core_strobe => sEOP_delay[1].CLK
core_strobe => sEOP_delay[2].CLK
core_strobe => sEOP_delay[3].CLK
core_strobe => sEOP_delay[4].CLK
core_strobe => sEOP_delay[5].CLK
core_strobe => sEOP_delay[6].CLK
core_strobe => sixone_counter[0].CLK
core_strobe => sixone_counter[1].CLK
core_strobe => sixone_counter[2].CLK
core_strobe => sixone_counter[3].CLK
core_strobe => sixone_counter[4].CLK
core_strobe => sixone_counter[5].CLK
core_strobe => sixone_counter[6].CLK
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
SOP => clk_counter.OUTPUTSELECT
send_reg[0] => out[0].ADATA
send_reg[1] => out[1].ADATA
send_reg[2] => out[2].ADATA
send_reg[3] => out[3].ADATA
send_reg[4] => out[4].ADATA
send_reg[5] => out[5].ADATA
send_reg[6] => out[6].ADATA
send_reg[7] => out[7].ADATA
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay.OUTPUTSELECT
sEOP => sEOP_delay[0].DATAIN
sdata_ready => do_bitstaff.ACLR
sdata_ready => out[0].ALOAD
sdata_ready => out[1].ALOAD
sdata_ready => out[2].ALOAD
sdata_ready => out[3].ALOAD
sdata_ready => out[4].ALOAD
sdata_ready => out[5].ALOAD
sdata_ready => out[6].ALOAD
sdata_ready => out[7].ALOAD
sdata_ready => NRZI_coding.ALOAD
sdata_ready => dm_out~reg0.ALOAD
sdata_ready => dp_out~reg0.ALOAD
sdata_ready => serial_shift.ENA
dp_out <= dp_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
dm_out <= dm_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
strobe <= clk_counter[6].DB_MAX_OUTPUT_PORT_TYPE
d_out_enable <= d_out_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
sixone_signal <= sixone_counter[6].DB_MAX_OUTPUT_PORT_TYPE


|Block1|ls_usb_core:inst2
clk => sdata_ready~reg0.CLK
clk => byteready_counter[0].CLK
clk => byteready_counter[1].CLK
clk => byteready_counter[2].CLK
clk => byteready_counter[3].CLK
clk => byteready_counter[4].CLK
clk => byteready_counter[5].CLK
clk => fsm_sync.CLK
clk => EOP_delay[0].CLK
clk => EOP_delay[1].CLK
clk => EOP_delay[2].CLK
EOP => EOP_delay.OUTPUTSELECT
EOP => EOP_delay.OUTPUTSELECT
EOP => xsEOP.IN1
EOP => TX_EN~reg0.ACLR
EOP => TX_byte_CRC[0]~reg0.ACLR
EOP => TX_byte_CRC[1]~reg0.ACLR
EOP => TX_byte_CRC[2]~reg0.ACLR
EOP => TX_byte_CRC[3]~reg0.ACLR
EOP => TX_byte_CRC[4]~reg0.ACLR
EOP => TX_byte_CRC[5]~reg0.ACLR
EOP => TX_byte_CRC[6]~reg0.ACLR
EOP => TX_byte_CRC[7]~reg0.ACLR
EOP => bytenum[0].PRESET
EOP => bytenum[1].ACLR
EOP => bytenum[2].ACLR
EOP => bytenum[3].ACLR
EOP => bytenum[4].ACLR
EOP => bytenum[5].ACLR
EOP => bytenum[6].ACLR
EOP => bytenum[7].ACLR
EOP => bytenum[8].ACLR
EOP => bytenum[9].ACLR
EOP => EOP_delay[0].DATAIN
EOP => always8.IN1
EOP => recv_packet[8][7].ENA
EOP => recv_packet[8][6].ENA
EOP => recv_packet[8][5].ENA
EOP => recv_packet[8][4].ENA
EOP => recv_packet[8][3].ENA
EOP => recv_packet[8][2].ENA
EOP => recv_packet[8][1].ENA
EOP => recv_packet[8][0].ENA
EOP => recv_packet[7][7].ENA
EOP => recv_packet[7][6].ENA
EOP => recv_packet[7][5].ENA
EOP => recv_packet[7][4].ENA
EOP => recv_packet[7][3].ENA
EOP => recv_packet[7][2].ENA
EOP => recv_packet[7][1].ENA
EOP => recv_packet[7][0].ENA
EOP => recv_packet[4][7].ENA
EOP => recv_packet[4][6].ENA
EOP => recv_packet[4][5].ENA
EOP => recv_packet[4][4].ENA
EOP => recv_packet[4][3].ENA
EOP => recv_packet[4][2].ENA
EOP => recv_packet[4][1].ENA
EOP => recv_packet[4][0].ENA
EOP => recv_packet[3][7].ENA
EOP => recv_packet[3][6].ENA
EOP => recv_packet[3][5].ENA
EOP => recv_packet[3][4].ENA
EOP => recv_packet[3][3].ENA
EOP => recv_packet[3][2].ENA
EOP => recv_packet[3][1].ENA
EOP => recv_packet[3][0].ENA
EOP => recv_packet[2][7].ENA
EOP => recv_packet[2][6].ENA
EOP => recv_packet[2][5].ENA
EOP => recv_packet[2][4].ENA
EOP => recv_packet[2][3].ENA
EOP => recv_packet[2][2].ENA
EOP => recv_packet[2][1].ENA
EOP => recv_packet[2][0].ENA
EOP => recv_packet[1][7].ENA
EOP => recv_packet[1][6].ENA
EOP => recv_packet[1][5].ENA
EOP => recv_packet[1][4].ENA
EOP => recv_packet[1][3].ENA
EOP => recv_packet[1][2].ENA
EOP => recv_packet[1][1].ENA
EOP => recv_packet[1][0].ENA
EOP => PID_decoder[5].ENA
EOP => PID_decoder[4].ENA
EOP => PID_decoder[2].ENA
EOP => PID_decoder[1].ENA
EOP => PID_decoder[0].ENA
EOP => ADDR_ENDP_CRC_decoder[10].ENA
EOP => ADDR_ENDP_CRC_decoder[9].ENA
EOP => ADDR_ENDP_CRC_decoder[8].ENA
EOP => ADDR_ENDP_CRC_decoder[7].ENA
EOP => ADDR_ENDP_CRC_decoder[6].ENA
EOP => ADDR_ENDP_CRC_decoder[5].ENA
EOP => ADDR_ENDP_CRC_decoder[4].ENA
EOP => ADDR_ENDP_CRC_decoder[3].ENA
EOP => ADDR_ENDP_CRC_decoder[2].ENA
EOP => ADDR_ENDP_CRC_decoder[1].ENA
EOP => ADDR_ENDP_CRC_decoder[0].ENA
rdata[0] => recv_packet.DATAB
rdata[0] => ADDR_ENDP_CRC_decoder.DATAB
rdata[0] => recv_packet.DATAB
rdata[0] => ADDR_ENDP_CRC_decoder.DATAB
rdata[0] => recv_packet.DATAB
rdata[0] => recv_packet.DATAB
rdata[0] => recv_packet.DATAB
rdata[0] => recv_packet.DATAB
rdata[0] => TX_byte_CRC.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => ADDR_ENDP_CRC_decoder.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => ADDR_ENDP_CRC_decoder.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => recv_packet.DATAB
rdata[1] => TX_byte_CRC.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => ADDR_ENDP_CRC_decoder.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => ADDR_ENDP_CRC_decoder.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => recv_packet.DATAB
rdata[2] => TX_byte_CRC.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => ADDR_ENDP_CRC_decoder.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => recv_packet.DATAB
rdata[3] => TX_byte_CRC.DATAB
rdata[4] => Decoder0.IN3
rdata[4] => recv_packet.DATAB
rdata[4] => ADDR_ENDP_CRC_decoder.DATAB
rdata[4] => recv_packet.DATAB
rdata[4] => recv_packet.DATAB
rdata[4] => recv_packet.DATAB
rdata[4] => recv_packet.DATAB
rdata[4] => recv_packet.DATAB
rdata[4] => TX_byte_CRC.DATAB
rdata[5] => Decoder0.IN2
rdata[5] => recv_packet.DATAB
rdata[5] => ADDR_ENDP_CRC_decoder.DATAB
rdata[5] => recv_packet.DATAB
rdata[5] => recv_packet.DATAB
rdata[5] => recv_packet.DATAB
rdata[5] => recv_packet.DATAB
rdata[5] => recv_packet.DATAB
rdata[5] => TX_byte_CRC.DATAB
rdata[6] => Decoder0.IN1
rdata[6] => recv_packet.DATAB
rdata[6] => ADDR_ENDP_CRC_decoder.DATAB
rdata[6] => recv_packet.DATAB
rdata[6] => recv_packet.DATAB
rdata[6] => recv_packet.DATAB
rdata[6] => recv_packet.DATAB
rdata[6] => recv_packet.DATAB
rdata[6] => TX_byte_CRC.DATAB
rdata[7] => Decoder0.IN0
rdata[7] => recv_packet.DATAB
rdata[7] => ADDR_ENDP_CRC_decoder.DATAB
rdata[7] => recv_packet.DATAB
rdata[7] => recv_packet.DATAB
rdata[7] => recv_packet.DATAB
rdata[7] => recv_packet.DATAB
rdata[7] => recv_packet.DATAB
rdata[7] => TX_byte_CRC.DATAB
rdata_ready => TX_EN~reg0.CLK
rdata_ready => TX_byte_CRC[0]~reg0.CLK
rdata_ready => TX_byte_CRC[1]~reg0.CLK
rdata_ready => TX_byte_CRC[2]~reg0.CLK
rdata_ready => TX_byte_CRC[3]~reg0.CLK
rdata_ready => TX_byte_CRC[4]~reg0.CLK
rdata_ready => TX_byte_CRC[5]~reg0.CLK
rdata_ready => TX_byte_CRC[6]~reg0.CLK
rdata_ready => TX_byte_CRC[7]~reg0.CLK
rdata_ready => ADDR_ENDP_CRC_decoder[0].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[1].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[2].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[3].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[4].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[5].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[6].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[7].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[8].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[9].CLK
rdata_ready => ADDR_ENDP_CRC_decoder[10].CLK
rdata_ready => PID_decoder[0].CLK
rdata_ready => PID_decoder[1].CLK
rdata_ready => PID_decoder[2].CLK
rdata_ready => PID_decoder[4].CLK
rdata_ready => PID_decoder[5].CLK
rdata_ready => recv_packet[1][0].CLK
rdata_ready => recv_packet[1][1].CLK
rdata_ready => recv_packet[1][2].CLK
rdata_ready => recv_packet[1][3].CLK
rdata_ready => recv_packet[1][4].CLK
rdata_ready => recv_packet[1][5].CLK
rdata_ready => recv_packet[1][6].CLK
rdata_ready => recv_packet[1][7].CLK
rdata_ready => recv_packet[2][0].CLK
rdata_ready => recv_packet[2][1].CLK
rdata_ready => recv_packet[2][2].CLK
rdata_ready => recv_packet[2][3].CLK
rdata_ready => recv_packet[2][4].CLK
rdata_ready => recv_packet[2][5].CLK
rdata_ready => recv_packet[2][6].CLK
rdata_ready => recv_packet[2][7].CLK
rdata_ready => recv_packet[3][0].CLK
rdata_ready => recv_packet[3][1].CLK
rdata_ready => recv_packet[3][2].CLK
rdata_ready => recv_packet[3][3].CLK
rdata_ready => recv_packet[3][4].CLK
rdata_ready => recv_packet[3][5].CLK
rdata_ready => recv_packet[3][6].CLK
rdata_ready => recv_packet[3][7].CLK
rdata_ready => recv_packet[4][0].CLK
rdata_ready => recv_packet[4][1].CLK
rdata_ready => recv_packet[4][2].CLK
rdata_ready => recv_packet[4][3].CLK
rdata_ready => recv_packet[4][4].CLK
rdata_ready => recv_packet[4][5].CLK
rdata_ready => recv_packet[4][6].CLK
rdata_ready => recv_packet[4][7].CLK
rdata_ready => recv_packet[7][0].CLK
rdata_ready => recv_packet[7][1].CLK
rdata_ready => recv_packet[7][2].CLK
rdata_ready => recv_packet[7][3].CLK
rdata_ready => recv_packet[7][4].CLK
rdata_ready => recv_packet[7][5].CLK
rdata_ready => recv_packet[7][6].CLK
rdata_ready => recv_packet[7][7].CLK
rdata_ready => recv_packet[8][0].CLK
rdata_ready => recv_packet[8][1].CLK
rdata_ready => recv_packet[8][2].CLK
rdata_ready => recv_packet[8][3].CLK
rdata_ready => recv_packet[8][4].CLK
rdata_ready => recv_packet[8][5].CLK
rdata_ready => recv_packet[8][6].CLK
rdata_ready => recv_packet[8][7].CLK
rdata_ready => bytenum[0].CLK
rdata_ready => bytenum[1].CLK
rdata_ready => bytenum[2].CLK
rdata_ready => bytenum[3].CLK
rdata_ready => bytenum[4].CLK
rdata_ready => bytenum[5].CLK
rdata_ready => bytenum[6].CLK
rdata_ready => bytenum[7].CLK
rdata_ready => bytenum[8].CLK
rdata_ready => bytenum[9].CLK
strobe => ~NO_FANOUT~
SOP => sEOP.OUTPUTSELECT
SOP => SEOP.IN1
SOP => byteready_counter.OUTPUTSELECT
SOP => byteready_counter.OUTPUTSELECT
SOP => byteready_counter.OUTPUTSELECT
SOP => byteready_counter.OUTPUTSELECT
SOP => byteready_counter.OUTPUTSELECT
SOP => byteready_counter.OUTPUTSELECT
SOP => sdata_ready.OUTPUTSELECT
SOP => send_reg[7]$latch.LATCH_ENABLE
SOP => send_reg[6]$latch.LATCH_ENABLE
SOP => send_reg[5]$latch.LATCH_ENABLE
SOP => send_reg[4]$latch.LATCH_ENABLE
SOP => send_reg[3]$latch.LATCH_ENABLE
SOP => send_reg[2]$latch.LATCH_ENABLE
SOP => send_reg[1]$latch.LATCH_ENABLE
SOP => send_reg[0]$latch.LATCH_ENABLE
SOP => always8.IN1
SOP => bytenum[9].ENA
SOP => bytenum[8].ENA
SOP => bytenum[7].ENA
SOP => bytenum[6].ENA
SOP => bytenum[5].ENA
SOP => bytenum[4].ENA
SOP => bytenum[3].ENA
SOP => bytenum[2].ENA
SOP => bytenum[1].ENA
SOP => bytenum[0].ENA
strobe_sender => ~NO_FANOUT~
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => byteready_counter.OUTPUTSELECT
sixone_signal => sdata_ready~reg0.ENA
SETUP_token <= <GND>
send_reg[0] <= send_reg[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[1] <= send_reg[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[2] <= send_reg[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[3] <= send_reg[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[4] <= send_reg[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[5] <= send_reg[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[6] <= send_reg[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
send_reg[7] <= send_reg[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
sEOP <= sEOP.DB_MAX_OUTPUT_PORT_TYPE
sdata_ready <= sdata_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
btrdcnt_strobe <= byteready_counter[2].DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[0] <= TX_byte_CRC[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[1] <= TX_byte_CRC[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[2] <= TX_byte_CRC[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[3] <= TX_byte_CRC[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[4] <= TX_byte_CRC[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[5] <= TX_byte_CRC[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[6] <= TX_byte_CRC[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
TX_byte_CRC[7] <= TX_byte_CRC[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RX_byte[0] => ~NO_FANOUT~
RX_byte[1] => ~NO_FANOUT~
RX_byte[2] => ~NO_FANOUT~
RX_byte[3] => ~NO_FANOUT~
RX_byte[4] => ~NO_FANOUT~
RX_byte[5] => ~NO_FANOUT~
RX_byte[6] => ~NO_FANOUT~
RX_byte[7] => ~NO_FANOUT~
TX_EN <= TX_EN~reg0.DB_MAX_OUTPUT_PORT_TYPE
RX_DONE => state.SEND_DATA_TEST_MESSAGE_RX.OUTPUTSELECT
RX_DONE => state.RECV_TX_DATA.OUTPUTSELECT
RX_DONE => state.SEND_DATA_TEST_MESSAGE.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_LINE_CODING.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_STRING2.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_STRING1.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_STRING0.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_CONFIGURATION_FULL.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_CONFIGURATION.OUTPUTSELECT
RX_DONE => state.SEND_DATA1_NULL.OUTPUTSELECT
RX_DONE => state.SEND_ACK.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC_FULL.OUTPUTSELECT
RX_DONE => state.SEND_DATA_GET_DESC.OUTPUTSELECT
RX_DONE => state.RECV_DATA.OUTPUTSELECT
RX_DONE => state.IDLE.OUTPUTSELECT
RX_DONE => RX_SEND_USB.PRESET
RX_DONE => transac_counter[3].ENA
RX_DONE => transac_counter[2].ENA
RX_DONE => transac_counter[1].ENA
RX_DONE => transac_counter[0].ENA
RX_DONE => device_address[7].ENA
RX_DONE => device_address[6].ENA
RX_DONE => device_address[5].ENA
RX_DONE => device_address[4].ENA
RX_DONE => device_address[3].ENA
RX_DONE => device_address[2].ENA
RX_DONE => device_address[1].ENA
RX_DONE => device_address[0].ENA
RX_DONE => bmRequestType[7].ENA
RX_DONE => bmRequestType[6].ENA
RX_DONE => bmRequestType[5].ENA
RX_DONE => bmRequestType[4].ENA
RX_DONE => bmRequestType[3].ENA
RX_DONE => bmRequestType[2].ENA
RX_DONE => bmRequestType[1].ENA
RX_DONE => bmRequestType[0].ENA
RX_DONE => bRequestCode[7].ENA
RX_DONE => bRequestCode[6].ENA
RX_DONE => bRequestCode[5].ENA
RX_DONE => bRequestCode[4].ENA
RX_DONE => bRequestCode[3].ENA
RX_DONE => bRequestCode[2].ENA
RX_DONE => bRequestCode[1].ENA
RX_DONE => bRequestCode[0].ENA
RX_DONE => wValue[15].ENA
RX_DONE => wValue[14].ENA
RX_DONE => wValue[13].ENA
RX_DONE => wValue[12].ENA
RX_DONE => wValue[11].ENA
RX_DONE => wValue[10].ENA
RX_DONE => wValue[9].ENA
RX_DONE => wValue[8].ENA
RX_DONE => wValue[7].ENA
RX_DONE => wValue[6].ENA
RX_DONE => wValue[5].ENA
RX_DONE => wValue[4].ENA
RX_DONE => wValue[3].ENA
RX_DONE => wValue[2].ENA
RX_DONE => wValue[1].ENA
RX_DONE => wValue[0].ENA
RX_DONE => wLength[15].ENA
RX_DONE => wLength[14].ENA
RX_DONE => wLength[13].ENA
RX_DONE => wLength[12].ENA
RX_DONE => wLength[11].ENA
RX_DONE => wLength[10].ENA
RX_DONE => wLength[9].ENA
RX_DONE => wLength[8].ENA
RX_DONE => wLength[7].ENA
RX_DONE => wLength[6].ENA
RX_DONE => wLength[5].ENA
RX_DONE => wLength[4].ENA
RX_DONE => wLength[3].ENA
RX_DONE => wLength[2].ENA
RX_DONE => wLength[1].ENA
RX_DONE => wLength[0].ENA


|Block1|altiobuf0:inst14
datain[0] => datain[0].IN1
oe[0] => oe[0].IN1
dataio[0] <> altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component.dataio
dataout[0] <= altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component.dataout


|Block1|altiobuf0:inst14|altiobuf0_iobuf_bidir_30p:altiobuf0_iobuf_bidir_30p_component
datain[0] => obufa_0.IN
dataio[0] <> dataio[0]
dataout[0] <= ibufa_0.OUT
oe[0] => obufa_0.OE


